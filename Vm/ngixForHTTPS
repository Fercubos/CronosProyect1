Si aún no tienes un certificado SSL, puedes generar uno utilizando Let's Encrypt:

sudo apt install certbot python3-certbot-nginx
sudo certbot --nginx -d aaronprojects.xyz -d www.aaronprojects.xyz

Reinicia Nginx para aplicar los cambios:

sudo systemctl restart nginx


ls -l /etc/nginx/ssl/aaronprojects.xyz.crt
ls -l /etc/nginx/ssl/aaronprojects.xyz.key

sudo chmod 644 /etc/nginx/ssl/aaronprojects.xyz.crt
sudo chmod 600 /etc/nginx/ssl/aaronprojects.xyz.key

sudo systemctl restart nginx




sudo nano /etc/nginx/sites-available/default



server {
    listen 80;
    server_name aaronprojects.xyz www.aaronprojects.xyz;

    # Redirige todo el tráfico HTTP a HTTPS excepto para el webhook
    location /webhook {
        proxy_pass http://localhost:4000; # Cambia 4000 por el puerto en el que tu webhook está escuchando
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name aaronprojects.xyz www.aaronprojects.xyz;

    ssl_certificate /etc/letsencrypt/live/aaronprojects.xyz/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aaronprojects.xyz/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Configuración para servir archivos estáticos
    location /static/ {
        alias /home/aypierre225/ProyectoCronos06/CronosProyect1/ProyectoCronos/nodejs-mvc-boilerplate-master/src/public/;
        expires 1d;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    # Proxy pasante para la aplicación Express
    location / {
        proxy_pass http://localhost:3000; # Cambia 3000 por el puerto en el que tu aplicación Express está escuchando
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}